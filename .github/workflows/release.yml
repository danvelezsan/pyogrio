name: Release

on: workflow_dispatch
  

# cancel running jobs on new commit to PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-sdist:
    name: Build pyogrio sdist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build a source tarball
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: pyogrio-sdist
          path: ./dist/*.tar.gz
          retention-days: 5
          compression-level: 0

  build-wheels-mac-win:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "windows-2019"
            triplet: "x86-windows"
            arch: x86
            # windows requires windows-specific paths
            vcpkg_cache: "c:\\vcpkg\\installed"
            vcpkg_logs: "c:\\vcpkg\\buildtrees\\**\\*.log"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache vcpkg
        uses: actions/cache@v4
        id: vcpkgcache
        with:
          path: |
            ${{ matrix.vcpkg_cache }}
          # bump the last digit to avoid using previous build cache
          key: ${{ matrix.os }}-${{ matrix.arch }}-vcpkg-gdal3.9.2-cache0

      - name: Checkout specific version of vcpkg
        shell: bash
        run: |
          cd $VCPKG_INSTALLATION_ROOT
          # on mac the clone is not clean, otherwise git pull fails
          git reset --hard
          # pull specific commit with desired GDAL version
          git pull

      - name: Install GDAL
        env:
          VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
        shell: bash
        run: |
          vcpkg install --triplet=x86-windows --feature-flags="versions,manifests" --x-manifest-root=./ci --x-install-root=$VCPKG_INSTALLATION_ROOT/installed
          vcpkg list

      - name: Upload vcpkg build logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: pyogrio-vcpkg-logs-${{ matrix.triplet }}
          path: ${{ matrix.vcpkg_logs }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          # CIBW needs to know triplet for the correct install path
          VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
          CIBW_ARCHS: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: pyogrio-wheel-${{ matrix.triplet }}
          path: ./wheelhouse/*.whl
          compression-level: 0

  publish:
    name: Publish pyogrio to GitHub / PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyogrio
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing to PyPI
      contents: write # this permission is required for the Github release action

    # release on every tag
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: pyogrio-*
          path: dist
          merge-multiple: true

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Version ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: dist/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
